//
//  main.cpp
//  Lab8
//
//  Created by Leonardo Aureliano on 2022-07-25.
#include <iostream>
using namespace std;

class Movie{
private:
    string name;
    string MBAA;
    
//    int terrible_count;
//    int bad_count;
//    int ok_count;
//    int good_count;
//    int great_count;
    
    int *arr;
    
public:
    Movie(string name, string MBAA){
        this ->name = name;
        this ->MBAA = MBAA;
        
//
//        terrible_count = 0;
//        bad_count = 0;
//        ok_count = 0;
//        good_count = 0;
//        great_count = 0;
        arr = new int[5];
        for (int i = 0; i < 5; i++)
                {
                    arr[i] = 0;
                }

    }
    
    Movie(){
        
        arr = new int[5];
        for(int i = 0; i < 5; i++){
            arr[i] = 0;
        }
        
//        terrible_count = 0;
//        bad_count = 0;
//        ok_count = 0;
//        good_count = 0;
//        great_count = 0;
        //todo
    }

    void addRating(int category){
//        switch(category){
//            case 1:
//                terrible_count++;
//                break;
//
//            case 2:
//                bad_count++;
//                break;
//
//            case 3:
//                ok_count++;
//                break;
//
//            case 4:
//                good_count++;
//                break;
//
//            case 5:
//                great_count++;
//                break;
//
//
//            default:
//                cout << "Bad category. Plz try again" << endl;
//                break;
//        }
////
//        if (category == 1){
//            terrible_count++;
//        }
//        else if (category == 2)
//               {
//            bad_count++;
//               }
//        else if (category == 3)
//              {
//            ok_count++;
//              }
//        else if (category == 4)
//              {
//            good_count++;
//              }
//        else if (category == 5)
//              {
//            great_count++;
//              }
//        else
//              {
//            cout << "Bad category. Plz try again" << endl;
//
        if (category < 1 || category > 5)
        {
            cout << "Bad category. Plz try again" << endl;
        }
        else
         arr[category - 1]++;
        
    }
};
        
    
    string getname(){
        return name;
    }
    
    string getMBAA(){
        return MBAA;
    }
    
    void setname(string name){
        this->name = name;
    }
    
    void setMBAA(string MBAA){
        this->MBAA = MBAA;
            }
    
    double getAvarage(){
//        return (terrible_count * 1 +
//                bad_count * 2 +
//                ok_count * 3
//                + good_count * 4 +
//                great_count * 5) / (terrible_count + bad_count + ok_count + good_count + great_count * 1.0);
              int sum = 0;
              int sum2 = 0;
              for( int i = 0 ; i < 5 ; i++){
                  sum += arr[i] * (i+1);
                  sum2 += arr[i];
              }
              return sum / (sum2 *1.0);
        
    }

//copy constructor
Movie(Movie &y){
    // deep copy
    this->arr = new int[5];
    for(int i = 0; i < 5; i++){
        this->arr[i] = y.arr[i];
    }

//Operator Equal Member fuction
void operator = (Movie X){ //x(Movie)
    //deep copy
    for(int i = 0; i < 5;i++)
        this->arr[i] = x.arr[i];
}
~Movie(){
    delete[]arr;
}
    
};


int main(){
    
    Movie *arr;
    arr = nem Movie[2]
    arr[0] = new Movie("200", "L") //default
    
    Movie movie1("300", "R");
    movie1.addRating(1); //Terrible
    movie1.addRating(1); //Terrible
    movie1.addRating(3); //Ok
    movie1.addRating(3); //OK
    movie1.addRating(5); //Great
    cout << movie1.getname() << endl; //300,
    cout << movie1.getMBAA() << endl; //R
    cout << movie1.getAvarage() << endl; //2.6
    
    Movie movie2;
    movie2.setname("The GodFather");
    movie2.setMBAA("PG - 13");
    movie2.addRating(1); //Terrible
    movie2.addRating(3); //OK
    movie2.addRating(5); //Great
    movie2.addRating(5); //Great
    movie2.addRating(5); //Great
    cout << movie2.getname() << endl;   //The GodFather
    cout << movie2.getMBAA() << endl; //PG-13
    cout << movie2.getAvarage() << endl; //3.8
    
    movie1 = movie2; //movie1.operator=(movie2);
    movie1.addRating(5);
    cout << movie1.getAvarenge() << endl;//3.8;
    cour << movie2.getAvarenge() << endl;//4;
    cout << endl;
    return 0;
}
